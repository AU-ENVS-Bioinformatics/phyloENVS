library(table1)
library(igraph)
library(vegan)
library(broom)
# ENVS package
#devtools::install_github("johanneBiO/phyloENVS")
library(phyloENVS)
# Result path
res_path <- "../results/standard_2/"
#| message: false
meta_tbl <- read.csv("../data/clean_data/meta.csv")
otu_tbl  <- read.csv("../data/clean_data/otu.csv")
tax_tbl  <- read.csv("../data/clean_data/tax.csv")
# ENVS package
devtools::install_github("johanneBiO/phyloENVS")
library(phyloENVS)
# Result path
res_path <- "../results/standard_2/"
#| message: false
meta_tbl <- read.csv("../data/clean_data/meta.csv")
otu_tbl  <- read.csv("../data/clean_data/otu.csv")
tax_tbl  <- read.csv("../data/clean_data/tax.csv")
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
q()
devtools::install_github("johanneBiO/phyloENVS")
#| include: false
# Remove all objects from the current workspace
rm(list=ls())
# Libraries
library(readr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(phyloseq)
library(ggplot2)
library(ggrepel)
library(ggdendro)
library(patchwork)
library(table1)
library(igraph)
library(vegan)
library(broom)
# ENVS package
#devtools::install_github("johanneBiO/phyloENVS")
library(phyloENVS)
# Result path
res_path <- "../results/standard_2/"
#| message: false
meta_tbl <- read.csv("../data/clean_data/meta.csv")
otu_tbl  <- read.csv("../data/clean_data/otu.csv")
tax_tbl  <- read.csv("../data/clean_data/tax.csv")
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
#| include: false
# Remove all objects from the current workspace
rm(list=ls())
# Libraries
library(dplyr)
library(tidyverse)
library(tidyr)
library(phyloseq)
library(ggplot2)
library(ggrepel)
library(ggdendro)
library(patchwork)
library(table1)
library(igraph)
library(compositions)
library(propr)
library(coda.base)
library(vegan)
library(broom)
# Get functions from additional file
source("func.R")
# Result path
res_path <- "../results/standard/"
#| message: false
meta_tbl <- read_csv("../data/clean_data/meta.csv", show_col_types = FALSE)
otu_tbl  <- read_csv("../data/clean_data/otu.csv",  show_col_types = FALSE)
tax_tbl  <- read_csv("../data/clean_data/tax.csv",  show_col_types = FALSE)
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
tax <- tax_tbl |>
column_to_rownames(var = "Contig ID") |>
as.matrix() |>
tax_table()
devtools::install_github("johanneBiO/phyloENVS", dependencies = TRUE, force = TRUE)
# ENVS package
#devtools::install_github("johanneBiO/phyloENVS")
library(phyloENVS)
# Result path
res_path <- "../results/standard_2/"
#| message: false
meta_tbl <- read.csv("../data/clean_data/meta.csv")
otu_tbl  <- read.csv("../data/clean_data/otu.csv")
tax_tbl  <- read.csv("../data/clean_data/tax.csv")
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
BiocManager::install("phyloseq")
#| include: false
# Remove all objects from the current workspace
rm(list=ls())
# Libraries
library(readr)
library(dplyr)
library(tidyverse)
library(tidyr)
library(phyloseq)
library(ggplot2)
library(ggrepel)
library(ggdendro)
library(patchwork)
library(table1)
library(igraph)
library(vegan)
library(broom)
# ENVS package
#devtools::install_github("johanneBiO/phyloENVS")
#library(phyloENVS)
# Result path
res_path <- "../results/standard_2/"
#| message: false
meta_tbl <- read.csv("../data/clean_data/meta.csv")
otu_tbl  <- read.csv("../data/clean_data/otu.csv")
tax_tbl  <- read.csv("../data/clean_data/tax.csv")
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
#| include: false
# Remove all objects from the current workspace
rm(list=ls())
# Libraries
library(dplyr)
library(tidyverse)
library(tidyr)
library(phyloseq)
library(ggplot2)
library(ggrepel)
library(ggdendro)
library(patchwork)
library(table1)
library(igraph)
library(compositions)
library(propr)
library(coda.base)
library(vegan)
library(broom)
# Get functions from additional file
source("func.R")
# Result path
res_path <- "../results/standard/"
#| message: false
meta_tbl <- read_csv("../data/clean_data/meta.csv", show_col_types = FALSE)
otu_tbl  <- read_csv("../data/clean_data/otu.csv",  show_col_types = FALSE)
tax_tbl  <- read_csv("../data/clean_data/tax.csv",  show_col_types = FALSE)
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
tax <- tax_tbl |>
column_to_rownames(var = "Contig ID") |>
as.matrix() |>
tax_table()
#| include: false
# Remove all objects from the current workspace
rm(list=ls())
# Libraries
library(dplyr)
library(tidyverse)
library(tidyr)
library(phyloseq)
library(ggplot2)
library(ggrepel)
library(ggdendro)
library(patchwork)
library(table1)
library(igraph)
library(compositions)
library(propr)
library(coda.base)
library(vegan)
library(broom)
# ENVS package
#devtools::install_github("johanneBiO/phyloENVS")
#library(phyloENVS)
# Result path
res_path <- "../results/standard_2/"
#| message: false
meta_tbl <- read.csv("../data/clean_data/meta.csv")
otu_tbl  <- read.csv("../data/clean_data/otu.csv")
tax_tbl  <- read.csv("../data/clean_data/tax.csv")
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
#| message: false
meta_tbl <- read_csv("../data/clean_data/meta.csv", show_col_types = FALSE)
otu_tbl  <- read_csv("../data/clean_data/otu.csv",  show_col_types = FALSE)
tax_tbl  <- read_csv("../data/clean_data/tax.csv",  show_col_types = FALSE)
#| message: false
meta_tbl <- read_csv("../data/clean_data/meta.csv", show_col_types = FALSE)
otu_tbl  <- read_csv("../data/clean_data/otu.csv",  show_col_types = FALSE)
tax_tbl  <- read_csv("../data/clean_data/tax.csv",  show_col_types = FALSE)
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
tax <- tax_tbl |>
column_to_rownames(var = "Contig ID") |>
as.matrix() |>
tax_table()
#| include: false
# Remove all objects from the current workspace
rm(list=ls())
# Libraries
library(dplyr)
library(tidyverse)
library(tidyr)
library(phyloseq)
library(ggplot2)
library(ggrepel)
library(ggdendro)
library(patchwork)
library(table1)
library(igraph)
library(compositions)
library(propr)
library(coda.base)
library(vegan)
library(broom)
# ENVS package
#devtools::install_github("johanneBiO/phyloENVS")
#library(phyloENVS)
# Result path
res_path <- "../results/standard_2/"
#| message: false
meta_tbl <- read_csv("../data/clean_data/meta.csv", show_col_types = FALSE)
otu_tbl  <- read_csv("../data/clean_data/otu.csv",  show_col_types = FALSE)
tax_tbl  <- read_csv("../data/clean_data/tax.csv",  show_col_types = FALSE)
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
tax <- tax_tbl |>
column_to_rownames(var = "Contig ID") |>
as.matrix() |>
tax_table()
# ENVS package
#devtools::install_github("johanneBiO/phyloENVS")
library(phyloENVS)
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
tax <- tax_tbl |>
column_to_rownames(var = "Contig ID") |>
as.matrix() |>
tax_table()
stopifnot(ncol(otu) == nrow(meta))
stopifnot(nrow(otu) == nrow(tax))
physeq <- phyloseq(otu, tax, meta)
sample_data(physeq )
vis_abundance(physeq, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 2){
vis_abundance(physeq, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 2)
physeq
vis_abundance(physeq, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 2)
library(rlang)
vis_abundance(physeq, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 2)
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
physeq <- phyloseq(otu, tax, meta)
vis_abundance(physeq, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 2)
View(meta)
physeq1 <- subset_samples(physeq, Transect == "Non-transect")
physeq1
physeq1 <- subset_samples(physeq, Transect == "Non-transect")
physeq2 <- subset_samples(physeq, Transect != "Non-transect")
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 2)
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 5)
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 3)
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 4)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 10)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 2)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 4)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 5)
# ENVS package
devtools::install_github("johanneBiO/phyloENVS")
library(phyloENVS)
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 5)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 1)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 4)
rev(c(fetch_color("main3", group_color_num-2), "red", "#4b4b4a"))
rev(c(fetch_color("main3", 6-2), "red", "#4b4b4a"))
# ENVS package
#devtools::install_github("johanneBiO/phyloENVS")
library(phyloENVS)
# ENVS package
devtools::install_github("johanneBiO/phyloENVS")
library(phyloENVS)
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 4)
# ENVS package
devtools::install_github("johanneBiO/phyloENVS")
# ENVS package
devtools::install_github("johanneBiO/phyloENVS", force = TRUE)
library(phyloENVS)
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 4)
# ENVS package
devtools::install_github("johanneBiO/phyloENVS", force = TRUE)
library(phyloENVS)
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 4)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 4)
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 4)
packageVersion("yourpackage")
packageVersion("phyloENVS")
# ENVS package
devtools::install_github("johanneBiO/phyloENVS", force = TRUE)
library(phyloENVS)
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 4)
#| include: false
# Remove all objects from the current workspace
rm(list=ls())
# Libraries
library(dplyr)
library(tidyverse)
library(tidyr)
library(phyloseq)
library(ggplot2)
library(ggrepel)
library(ggdendro)
library(patchwork)
library(table1)
library(igraph)
library(compositions)
library(propr)
library(coda.base)
library(vegan)
library(broom)
# ENVS package
devtools::install_github("johanneBiO/phyloENVS", force = TRUE)
library(phyloENVS)
# Result path
res_path <- "../results/standard_2/"
#| message: false
meta_tbl <- read_csv("../data/clean_data/meta.csv", show_col_types = FALSE)
otu_tbl  <- read_csv("../data/clean_data/otu.csv",  show_col_types = FALSE)
tax_tbl  <- read_csv("../data/clean_data/tax.csv",  show_col_types = FALSE)
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
tax <- tax_tbl |>
column_to_rownames(var = "Contig ID") |>
as.matrix() |>
tax_table()
stopifnot(ncol(otu) == nrow(meta))
stopifnot(nrow(otu) == nrow(tax))
physeq <- phyloseq(otu, tax, meta)
physeq1 <- subset_samples(physeq, Transect == "Non-transect")
physeq2 <- subset_samples(physeq, Transect != "Non-transect")
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 4)
#| include: false
# Remove all objects from the current workspace
rm(list=ls())
# Libraries
library(dplyr)
library(tidyverse)
library(tidyr)
library(phyloseq)
library(ggplot2)
library(ggrepel)
library(ggdendro)
library(patchwork)
library(table1)
library(igraph)
library(compositions)
library(propr)
library(coda.base)
library(vegan)
library(broom)
# ENVS package
devtools::install_github("johanneBiO/phyloENVS", force = TRUE)
library(phyloENVS)
# Result path
res_path <- "../results/standard_2/"
#| message: false
meta_tbl <- read_csv("../data/clean_data/meta.csv", show_col_types = FALSE)
otu_tbl  <- read_csv("../data/clean_data/otu.csv",  show_col_types = FALSE)
tax_tbl  <- read_csv("../data/clean_data/tax.csv",  show_col_types = FALSE)
meta <- meta_tbl |>
column_to_rownames(var = "Sample") |>
mutate(Wetness = factor(Wetness, levels = c("Wet", "Semi-wet", "Dry", "Non-transect"))) |>
sample_data()
otu  <- otu_tbl |>
column_to_rownames(var = "Contig ID") |>
otu_table(taxa_are_rows = TRUE)
tax <- tax_tbl |>
column_to_rownames(var = "Contig ID") |>
as.matrix() |>
tax_table()
stopifnot(ncol(otu) == nrow(meta))
stopifnot(nrow(otu) == nrow(tax))
physeq <- phyloseq(otu, tax, meta)
physeq1 <- subset_samples(physeq, Transect == "Non-transect")
physeq2 <- subset_samples(physeq, Transect != "Non-transect")
color_dict <- list(
main1 = c("#003d73", "#00aba4", "#ee7f00", "#655a9f", "#8bad3f", "#e2001a", "#37a0cb", "#fabb00", "#e2007a", "#878787"),
main2 = c("#002546", "#004543", "#5f3408", "#281c41", "#425821", "#5b0c0c", "#003e5c", "#634b03", "#5f0030", "#4b4b4a"),
main3 = c("#003d73", "#93a8c2", "#00aba4", "#a5d7d2", "#ee7f00", "#ffc28b", "#655a9f", "#b6b2d3", "#8bad3f", "#c6d89e")
)
vis_abundance(physeq1, SampleName, Location, level_glom = Phylum, level_select = NULL, group_select = NULL, lower_limit = 4)
q()
